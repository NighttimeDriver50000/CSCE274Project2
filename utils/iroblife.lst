   1               		.file	"iroblife.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 119               	.global	irobPeriodicImplNull
 121               	irobPeriodicImplNull:
   1:utils/iroblife.c **** #include <stdlib.h>
   2:utils/iroblife.c **** #include <stdint.h>
   3:utils/iroblife.c **** #include "iroblife.h"
   4:utils/iroblife.c **** 
   5:utils/iroblife.c **** #include "timer.h"
   6:utils/iroblife.c **** #include "cmod.h"
   7:utils/iroblife.c **** #include "iroblib.h"
   8:utils/iroblife.c **** #include "oi.h"
   9:utils/iroblife.c **** 
  10:utils/iroblife.c **** #include "sensing.h"
  11:utils/iroblife.c **** #include "irobled.h"
  12:utils/iroblife.c **** #include "driving.h"
  13:utils/iroblife.c **** #include "irobserial.h"
  14:utils/iroblife.c **** 
  15:utils/iroblife.c **** void irobPeriodicImplNull(void) {
 123               	.LM0:
 124               	.LFBB1:
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
 129 0000 0895      		ret
 131               	.Lscope1:
 134               	.global	setIrobPeriodicImpl
 136               	setIrobPeriodicImpl:
  16:utils/iroblife.c **** }
  17:utils/iroblife.c **** 
  18:utils/iroblife.c **** void (*irobPeriodicImpl)(void) = &irobPeriodicImplNull;
  19:utils/iroblife.c **** 
  20:utils/iroblife.c **** void setIrobPeriodicImpl(void (*func)(void)) {
 138               	.LM1:
 139               	.LFBB2:
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
  21:utils/iroblife.c ****     irobPeriodicImpl = func;
 145               	.LM2:
 146 0002 9093 0000 		sts irobPeriodicImpl+1,r25
 147 0006 8093 0000 		sts irobPeriodicImpl,r24
 148 000a 0895      		ret
 150               	.Lscope2:
 152               	.global	irobInit
 154               	irobInit:
  22:utils/iroblife.c **** }
  23:utils/iroblife.c **** 
  24:utils/iroblife.c **** void irobInit(void) {
 156               	.LM3:
 157               	.LFBB3:
 158               	/* prologue: function */
 159               	/* frame size = 0 */
 160               	/* stack size = 0 */
 161               	.L__stack_usage = 0
  25:utils/iroblife.c ****     // Set up Create and module
  26:utils/iroblife.c ****     initializeCommandModule();
 163               	.LM4:
 164 000c 0E94 0000 		call initializeCommandModule
  27:utils/iroblife.c ****     // Set Create as default serial destination
  28:utils/iroblife.c ****     setSerialDestination(SERIAL_CREATE);
 166               	.LM5:
 167 0010 81E0      		ldi r24,lo8(1)
 168 0012 0E94 0000 		call setSerialDestination
  29:utils/iroblife.c ****     
  30:utils/iroblife.c ****     // Is the Robot on
  31:utils/iroblife.c ****     powerOnRobot();
 170               	.LM6:
 171 0016 0E94 0000 		call powerOnRobot
  32:utils/iroblife.c ****     // Start the create
  33:utils/iroblife.c ****     byteTx(CmdStart);
 173               	.LM7:
 174 001a 80E8      		ldi r24,lo8(-128)
 175 001c 0E94 0000 		call byteTx
  34:utils/iroblife.c ****     // Set the baud rate for the Create and Command Module
  35:utils/iroblife.c ****     baud(Baud57600);
 177               	.LM8:
 178 0020 8AE0      		ldi r24,lo8(10)
 179 0022 0E94 0000 		call baud
  36:utils/iroblife.c ****     // Define some songs so that we know the robot is on.
  37:utils/iroblife.c ****     defineSongs();
 181               	.LM9:
 182 0026 0E94 0000 		call defineSongs
  38:utils/iroblife.c ****     // Deprecated form of safe mode. I use it because it will
  39:utils/iroblife.c ****     // turn of all LEDs, so it's essentially a reset.
  40:utils/iroblife.c ****     byteTx(CmdControl);
 184               	.LM10:
 185 002a 82E8      		ldi r24,lo8(-126)
 186 002c 0E94 0000 		call byteTx
  41:utils/iroblife.c ****     // We are operating in FULL mode.
  42:utils/iroblife.c ****     byteTx(CmdFull);
 188               	.LM11:
 189 0030 84E8      		ldi r24,lo8(-124)
 190 0032 0E94 0000 		call byteTx
  43:utils/iroblife.c **** 
  44:utils/iroblife.c ****     // Make sure the robot stops. 
  45:utils/iroblife.c ****     // As a precaution for the robot and your grade.
  46:utils/iroblife.c ****     driveStop();
 192               	.LM12:
 193 0036 0E94 0000 		call driveStop
  47:utils/iroblife.c **** 
  48:utils/iroblife.c ****     // Play the reset song and wait while it plays.
  49:utils/iroblife.c ****     byteTx(CmdPlay);
 195               	.LM13:
 196 003a 8DE8      		ldi r24,lo8(-115)
 197 003c 0E94 0000 		call byteTx
  50:utils/iroblife.c ****     byteTx(RESET_SONG);
 199               	.LM14:
 200 0040 80E0      		ldi r24,0
 201 0042 0E94 0000 		call byteTx
  51:utils/iroblife.c ****     delayMs(750);
 203               	.LM15:
 204 0046 6EEE      		ldi r22,lo8(-18)
 205 0048 72E0      		ldi r23,lo8(2)
 206 004a 80E0      		ldi r24,0
 207 004c 90E0      		ldi r25,0
 208 004e 0E94 0000 		call delayMs
  52:utils/iroblife.c **** 
  53:utils/iroblife.c ****     // Turn the power button on to red.
  54:utils/iroblife.c ****     irobledInit();
 210               	.LM16:
 211 0052 0C94 0000 		jmp irobledInit
 213               	.Lscope3:
 215               	.global	irobEnd
 217               	irobEnd:
  55:utils/iroblife.c **** }
  56:utils/iroblife.c **** 
  57:utils/iroblife.c **** void irobPeriodic(void) {
  58:utils/iroblife.c ****     // Call the user's periodic function
  59:utils/iroblife.c ****     irobPeriodicImpl();
  60:utils/iroblife.c ****     // Exit if the black button on the command module is pressed.
  61:utils/iroblife.c ****     if(UserButtonPressed) {
  62:utils/iroblife.c ****         irobEnd();
  63:utils/iroblife.c ****     }
  64:utils/iroblife.c **** }
  65:utils/iroblife.c **** 
  66:utils/iroblife.c **** void irobEnd(void) {
 219               	.LM17:
 220               	.LFBB4:
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 0 */
 224               	.L__stack_usage = 0
  67:utils/iroblife.c ****     // Stop the Create
  68:utils/iroblife.c ****     driveStop();
 226               	.LM18:
 227 0056 0E94 0000 		call driveStop
  69:utils/iroblife.c ****     // Power off the Create
  70:utils/iroblife.c ****     powerOffRobot();
 229               	.LM19:
 230 005a 0E94 0000 		call powerOffRobot
  71:utils/iroblife.c ****     // Exit the program
  72:utils/iroblife.c ****     exit(1);
 232               	.LM20:
 233 005e 81E0      		ldi r24,lo8(1)
 234 0060 90E0      		ldi r25,0
 235 0062 0E94 0000 		call exit
 237               	.Lscope4:
 239               	.global	irobPeriodic
 241               	irobPeriodic:
  57:utils/iroblife.c **** void irobPeriodic(void) {
 243               	.LM21:
 244               	.LFBB5:
 245               	/* prologue: function */
 246               	/* frame size = 0 */
 247               	/* stack size = 0 */
 248               	.L__stack_usage = 0
  59:utils/iroblife.c ****     irobPeriodicImpl();
 250               	.LM22:
 251 0066 E091 0000 		lds r30,irobPeriodicImpl
 252 006a F091 0000 		lds r31,irobPeriodicImpl+1
 253 006e 0995      		icall
  61:utils/iroblife.c ****     if(UserButtonPressed) {
 255               	.LM23:
 256 0070 4C9B      		sbis 0x9,4
  62:utils/iroblife.c ****         irobEnd();
 258               	.LM24:
 259 0072 0E94 0000 		call irobEnd
 260               	.L5:
 261 0076 0895      		ret
 263               	.Lscope5:
 264               	.global	irobPeriodicImpl
 265               		.data
 268               	irobPeriodicImpl:
 269 0000 0000      		.word	gs(irobPeriodicImplNull)
 271               		.text
 273               	.Letext0:
 274               		.ident	"GCC: (GNU) 4.8.2"
 275               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 iroblife.c
     /tmp/ccDTHGre.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccDTHGre.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccDTHGre.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccDTHGre.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccDTHGre.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccDTHGre.s:121    .text:0000000000000000 irobPeriodicImplNull
     /tmp/ccDTHGre.s:136    .text:0000000000000002 setIrobPeriodicImpl
     /tmp/ccDTHGre.s:268    .data:0000000000000000 irobPeriodicImpl
     /tmp/ccDTHGre.s:154    .text:000000000000000c irobInit
     /tmp/ccDTHGre.s:217    .text:0000000000000056 irobEnd
     /tmp/ccDTHGre.s:241    .text:0000000000000066 irobPeriodic

UNDEFINED SYMBOLS
initializeCommandModule
setSerialDestination
powerOnRobot
byteTx
baud
defineSongs
driveStop
delayMs
irobledInit
powerOffRobot
exit
__do_copy_data
