   1               		.file	"lib2a.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 109               		.section	.rodata.str1.1,"aMS",@progbits,1
 110               	.LC0:
 111 0000 556E 6B6E 		.string	"Unknown"
 111      6F77 6E00 
 112               		.text
 114               	.global	getChargingState
 116               	getChargingState:
   1:lib2a.c       **** #include "lib2a.h"
   2:lib2a.c       **** #include "irobserial.h"
   3:lib2a.c       **** #include "sensing.h"
   4:lib2a.c       **** #include "oi.h"
   5:lib2a.c       **** #include "cmod.h"
   6:lib2a.c       **** 
   7:lib2a.c       **** char *getChargingState(void) {
 118               	.LM0:
 119               	.LFBB1:
 120               	/* prologue: function */
 121               	/* frame size = 0 */
 122               	/* stack size = 0 */
 123               	.L__stack_usage = 0
   8:lib2a.c       ****     uint8_t state = getSensorUint8(SenChargeState);
 125               	.LM1:
 126 0000 80E1      		ldi r24,lo8(16)
 127 0002 0E94 0000 		call getSensorUint8
 128 0006 8630      		cpi r24,lo8(6)
 129 0008 00F4      		brsh .L3
 130 000a E82F      		mov r30,r24
 131 000c F0E0      		ldi r31,0
 132 000e EE0F      		lsl r30
 133 0010 FF1F      		rol r31
 134 0012 E050      		subi r30,lo8(-(CSWTCH.1))
 135 0014 F040      		sbci r31,hi8(-(CSWTCH.1))
 136 0016 8081      		ld r24,Z
 137 0018 9181      		ldd r25,Z+1
 138 001a 0895      		ret
 139               	.L3:
 140 001c 80E0      		ldi r24,lo8(.LC0)
 141 001e 90E0      		ldi r25,hi8(.LC0)
   9:lib2a.c       ****     switch (state) {
  10:lib2a.c       ****         case 0:
  11:lib2a.c       ****             return "Not Charging";
  12:lib2a.c       ****         case 1:
  13:lib2a.c       ****             return "Reconditioning Charging";
  14:lib2a.c       ****         case 2:
  15:lib2a.c       ****             return "Full Charging";
  16:lib2a.c       ****         case 3:
  17:lib2a.c       ****             return "Trickle Charging";
  18:lib2a.c       ****         case 4:
  19:lib2a.c       ****             return "Waiting";
  20:lib2a.c       ****         case 5:
  21:lib2a.c       ****             return "Charging Fault Condition";
  22:lib2a.c       ****         default:
  23:lib2a.c       ****             return "Unknown";
  24:lib2a.c       ****     }
  25:lib2a.c       **** }
 143               	.LM2:
 144 0020 0895      		ret
 149               	.Lscope1:
 150               		.section	.rodata.str1.1
 151               	.LC1:
 152 0008 4368 6172 		.string	"Charging State: %s\n"
 152      6769 6E67 
 152      2053 7461 
 152      7465 3A20 
 152      2573 0A00 
 153               	.LC2:
 154 001c 566F 6C74 		.string	"Voltage: %d mV\n"
 154      6167 653A 
 154      2025 6420 
 154      6D56 0A00 
 155               	.LC3:
 156 002c 4375 7272 		.string	"Current: %d mA\n"
 156      656E 743A 
 156      2025 6420 
 156      6D41 0A00 
 157               	.LC4:
 158 003c 4261 7474 		.string	"Battery Temperature: %d degC\n"
 158      6572 7920 
 158      5465 6D70 
 158      6572 6174 
 158      7572 653A 
 159               	.LC5:
 160 005a 4261 7474 		.string	"Battery Charge: %d mAh\n"
 160      6572 7920 
 160      4368 6172 
 160      6765 3A20 
 160      2564 206D 
 161               	.LC6:
 162 0072 4261 7474 		.string	"Battery Capacity: %d mAh\n"
 162      6572 7920 
 162      4361 7061 
 162      6369 7479 
 162      3A20 2564 
 163               	.LC7:
 164 008c 5761 6C6C 		.string	"Wall Signal: %d\n"
 164      2053 6967 
 164      6E61 6C3A 
 164      2025 640A 
 164      00
 165               	.LC8:
 166 009d 436C 6966 		.string	"Cliff Left Signal: %d\n"
 166      6620 4C65 
 166      6674 2053 
 166      6967 6E61 
 166      6C3A 2025 
 167               	.LC9:
 168 00b4 436C 6966 		.string	"Cliff Front Left Signal: %d\n"
 168      6620 4672 
 168      6F6E 7420 
 168      4C65 6674 
 168      2053 6967 
 169               	.LC10:
 170 00d1 436C 6966 		.string	"Cliff Front Right Signal: %d\n"
 170      6620 4672 
 170      6F6E 7420 
 170      5269 6768 
 170      7420 5369 
 171               	.LC11:
 172 00ef 436C 6966 		.string	"Cliff Right Signal: %d\n"
 172      6620 5269 
 172      6768 7420 
 172      5369 676E 
 172      616C 3A20 
 173               		.text
 175               	.global	iroblifePeriodic
 177               	iroblifePeriodic:
  26:lib2a.c       **** 
  27:lib2a.c       **** // Called by irobPeriodic
  28:lib2a.c       **** void iroblifePeriodic(void) {
 179               	.LM3:
 180               	.LFBB2:
 181               	/* prologue: function */
 182               	/* frame size = 0 */
 183               	/* stack size = 0 */
 184               	.L__stack_usage = 0
  29:lib2a.c       ****     // Switch output to USB
  30:lib2a.c       ****     setSerialDestination(SERIAL_USB);
 186               	.LM4:
 187 0022 82E0      		ldi r24,lo8(2)
 188 0024 0E94 0000 		call setSerialDestination
  31:lib2a.c       ****     // Output sensor values
  32:lib2a.c       ****     irobprintf("Charging State: %s\n", getChargingState());
 190               	.LM5:
 191 0028 0E94 0000 		call getChargingState
 192 002c 9F93      		push r25
 193 002e 8F93      		push r24
 194 0030 80E0      		ldi r24,lo8(.LC1)
 195 0032 90E0      		ldi r25,hi8(.LC1)
 196 0034 9F93      		push r25
 197 0036 8F93      		push r24
 198 0038 0E94 0000 		call irobprintf
  33:lib2a.c       ****     irobprintf("Voltage: %d mV\n", getSensorUint16(SenVolt1));
 200               	.LM6:
 201 003c 81E1      		ldi r24,lo8(17)
 202 003e 0E94 0000 		call getSensorUint16
 203 0042 9F93      		push r25
 204 0044 8F93      		push r24
 205 0046 80E0      		ldi r24,lo8(.LC2)
 206 0048 90E0      		ldi r25,hi8(.LC2)
 207 004a 9F93      		push r25
 208 004c 8F93      		push r24
 209 004e 0E94 0000 		call irobprintf
  34:lib2a.c       ****     irobprintf("Current: %d mA\n", getSensorInt16(SenCurr1));
 211               	.LM7:
 212 0052 83E1      		ldi r24,lo8(19)
 213 0054 0E94 0000 		call getSensorInt16
 214 0058 9F93      		push r25
 215 005a 8F93      		push r24
 216 005c 80E0      		ldi r24,lo8(.LC3)
 217 005e 90E0      		ldi r25,hi8(.LC3)
 218 0060 9F93      		push r25
 219 0062 8F93      		push r24
 220 0064 0E94 0000 		call irobprintf
  35:lib2a.c       ****     irobprintf("Battery Temperature: %d degC\n", getSensorInt8(SenTemp));
 222               	.LM8:
 223 0068 85E1      		ldi r24,lo8(21)
 224 006a 0E94 0000 		call getSensorInt8
 225 006e 282F      		mov r18,r24
 226 0070 3327      		clr r19
 227 0072 27FD      		sbrc r18,7
 228 0074 3095      		com r19
 229 0076 3F93      		push r19
 230 0078 8F93      		push r24
 231 007a 80E0      		ldi r24,lo8(.LC4)
 232 007c 90E0      		ldi r25,hi8(.LC4)
 233 007e 9F93      		push r25
 234 0080 8F93      		push r24
 235 0082 0E94 0000 		call irobprintf
  36:lib2a.c       ****     irobprintf("Battery Charge: %d mAh\n", getSensorUint16(SenCharge1));
 237               	.LM9:
 238 0086 86E1      		ldi r24,lo8(22)
 239 0088 0E94 0000 		call getSensorUint16
 240 008c 9F93      		push r25
 241 008e 8F93      		push r24
 242 0090 80E0      		ldi r24,lo8(.LC5)
 243 0092 90E0      		ldi r25,hi8(.LC5)
 244 0094 9F93      		push r25
 245 0096 8F93      		push r24
 246 0098 0E94 0000 		call irobprintf
  37:lib2a.c       ****     irobprintf("Battery Capacity: %d mAh\n", getSensorUint16(SenCap1));
 248               	.LM10:
 249 009c 88E1      		ldi r24,lo8(24)
 250 009e 0E94 0000 		call getSensorUint16
 251 00a2 9F93      		push r25
 252 00a4 8F93      		push r24
 253 00a6 80E0      		ldi r24,lo8(.LC6)
 254 00a8 90E0      		ldi r25,hi8(.LC6)
 255 00aa 9F93      		push r25
 256 00ac 8F93      		push r24
 257 00ae 0E94 0000 		call irobprintf
  38:lib2a.c       ****     irobprintf("Wall Signal: %d\n", getSensorUint16(SenWallSig1));
 259               	.LM11:
 260 00b2 8AE1      		ldi r24,lo8(26)
 261 00b4 0E94 0000 		call getSensorUint16
 262 00b8 9F93      		push r25
 263 00ba 8F93      		push r24
 264 00bc 80E0      		ldi r24,lo8(.LC7)
 265 00be 90E0      		ldi r25,hi8(.LC7)
 266 00c0 9F93      		push r25
 267 00c2 8F93      		push r24
 268 00c4 0E94 0000 		call irobprintf
  39:lib2a.c       ****     irobprintf("Cliff Left Signal: %d\n", getSensorUint16(SenCliffLSig1));
 270               	.LM12:
 271 00c8 8CE1      		ldi r24,lo8(28)
 272 00ca 0E94 0000 		call getSensorUint16
 273 00ce 9F93      		push r25
 274 00d0 8F93      		push r24
 275 00d2 80E0      		ldi r24,lo8(.LC8)
 276 00d4 90E0      		ldi r25,hi8(.LC8)
 277 00d6 9F93      		push r25
 278 00d8 8F93      		push r24
 279 00da 0E94 0000 		call irobprintf
  40:lib2a.c       ****     irobprintf("Cliff Front Left Signal: %d\n", getSensorUint16(SenCliffFLSig1));
 281               	.LM13:
 282 00de 8DB7      		in r24,__SP_L__
 283 00e0 9EB7      		in r25,__SP_H__
 284 00e2 8096      		adiw r24,32
 285 00e4 0FB6      		in __tmp_reg__,__SREG__
 286 00e6 F894      		cli
 287 00e8 9EBF      		out __SP_H__,r25
 288 00ea 0FBE      		out __SREG__,__tmp_reg__
 289 00ec 8DBF      		out __SP_L__,r24
 290 00ee 8EE1      		ldi r24,lo8(30)
 291 00f0 0E94 0000 		call getSensorUint16
 292 00f4 9F93      		push r25
 293 00f6 8F93      		push r24
 294 00f8 80E0      		ldi r24,lo8(.LC9)
 295 00fa 90E0      		ldi r25,hi8(.LC9)
 296 00fc 9F93      		push r25
 297 00fe 8F93      		push r24
 298 0100 0E94 0000 		call irobprintf
  41:lib2a.c       ****     irobprintf("Cliff Front Right Signal: %d\n", getSensorUint16(SenCliffFRSig1));
 300               	.LM14:
 301 0104 80E2      		ldi r24,lo8(32)
 302 0106 0E94 0000 		call getSensorUint16
 303 010a 9F93      		push r25
 304 010c 8F93      		push r24
 305 010e 80E0      		ldi r24,lo8(.LC10)
 306 0110 90E0      		ldi r25,hi8(.LC10)
 307 0112 9F93      		push r25
 308 0114 8F93      		push r24
 309 0116 0E94 0000 		call irobprintf
  42:lib2a.c       ****     irobprintf("Cliff Right Signal: %d\n", getSensorUint16(SenCliffRSig1));
 311               	.LM15:
 312 011a 82E2      		ldi r24,lo8(34)
 313 011c 0E94 0000 		call getSensorUint16
 314 0120 9F93      		push r25
 315 0122 8F93      		push r24
 316 0124 80E0      		ldi r24,lo8(.LC11)
 317 0126 90E0      		ldi r25,hi8(.LC11)
 318 0128 9F93      		push r25
 319 012a 8F93      		push r24
 320 012c 0E94 0000 		call irobprintf
  43:lib2a.c       ****     // Spacing
  44:lib2a.c       ****     byteTx('\n');
 322               	.LM16:
 323 0130 8AE0      		ldi r24,lo8(10)
 324 0132 0E94 0000 		call byteTx
  45:lib2a.c       ****     // Switch output back to Create for updating sensor values
  46:lib2a.c       ****     setSerialDestination(SERIAL_CREATE);
 326               	.LM17:
 327 0136 8DB7      		in r24,__SP_L__
 328 0138 9EB7      		in r25,__SP_H__
 329 013a 0C96      		adiw r24,12
 330 013c 0FB6      		in __tmp_reg__,__SREG__
 331 013e F894      		cli
 332 0140 9EBF      		out __SP_H__,r25
 333 0142 0FBE      		out __SREG__,__tmp_reg__
 334 0144 8DBF      		out __SP_L__,r24
 335 0146 81E0      		ldi r24,lo8(1)
 336 0148 0C94 0000 		jmp setSerialDestination
 338               	.Lscope2:
 339               		.section	.rodata.str1.1
 340               	.LC12:
 341 0107 4E6F 7420 		.string	"Not Charging"
 341      4368 6172 
 341      6769 6E67 
 341      00
 342               	.LC13:
 343 0114 5265 636F 		.string	"Reconditioning Charging"
 343      6E64 6974 
 343      696F 6E69 
 343      6E67 2043 
 343      6861 7267 
 344               	.LC14:
 345 012c 4675 6C6C 		.string	"Full Charging"
 345      2043 6861 
 345      7267 696E 
 345      6700 
 346               	.LC15:
 347 013a 5472 6963 		.string	"Trickle Charging"
 347      6B6C 6520 
 347      4368 6172 
 347      6769 6E67 
 347      00
 348               	.LC16:
 349 014b 5761 6974 		.string	"Waiting"
 349      696E 6700 
 350               	.LC17:
 351 0153 4368 6172 		.string	"Charging Fault Condition"
 351      6769 6E67 
 351      2046 6175 
 351      6C74 2043 
 351      6F6E 6469 
 352               		.section	.rodata
 355               	CSWTCH.1:
 356 0000 0000      		.word	.LC12
 357 0002 0000      		.word	.LC13
 358 0004 0000      		.word	.LC14
 359 0006 0000      		.word	.LC15
 360 0008 0000      		.word	.LC16
 361 000a 0000      		.word	.LC17
 362               		.text
 364               	.Letext0:
 365               		.ident	"GCC: (GNU) 4.8.2"
 366               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lib2a.c
     /tmp/ccv46iJC.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccv46iJC.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccv46iJC.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccv46iJC.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccv46iJC.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccv46iJC.s:116    .text:0000000000000000 getChargingState
     /tmp/ccv46iJC.s:355    .rodata:0000000000000000 CSWTCH.1
     /tmp/ccv46iJC.s:177    .text:0000000000000022 iroblifePeriodic

UNDEFINED SYMBOLS
getSensorUint8
setSerialDestination
irobprintf
getSensorUint16
getSensorInt16
getSensorInt8
byteTx
__do_copy_data
