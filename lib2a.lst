   1               		.file	"lib2a.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
 109               		.section	.rodata.str1.1,"aMS",@progbits,1
 110               	.LC0:
 111 0000 4368 6172 		.string	"Charging State: %d\n"
 111      6769 6E67 
 111      2053 7461 
 111      7465 3A20 
 111      2564 0A00 
 112               	.LC1:
 113 0014 566F 6C74 		.string	"Voltage: %d\n"
 113      6167 653A 
 113      2025 640A 
 113      00
 114               	.LC2:
 115 0021 4375 7272 		.string	"Current: %d\n"
 115      656E 743A 
 115      2025 640A 
 115      00
 116               	.LC3:
 117 002e 4261 7474 		.string	"Battery Temperature: %d\n"
 117      6572 7920 
 117      5465 6D70 
 117      6572 6174 
 117      7572 653A 
 118               	.LC4:
 119 0047 4261 7474 		.string	"Battery Charge: %d\n"
 119      6572 7920 
 119      4368 6172 
 119      6765 3A20 
 119      2564 0A00 
 120               	.LC5:
 121 005b 4261 7474 		.string	"Battery Capacity: %d\n"
 121      6572 7920 
 121      4361 7061 
 121      6369 7479 
 121      3A20 2564 
 122               	.LC6:
 123 0071 5761 6C6C 		.string	"Wall Signal: %d\n"
 123      2053 6967 
 123      6E61 6C3A 
 123      2025 640A 
 123      00
 124               	.LC7:
 125 0082 436C 6966 		.string	"Cliff Left Signal: %d\n"
 125      6620 4C65 
 125      6674 2053 
 125      6967 6E61 
 125      6C3A 2025 
 126               	.LC8:
 127 0099 436C 6966 		.string	"Cliff Front Left Signal: %d\n"
 127      6620 4672 
 127      6F6E 7420 
 127      4C65 6674 
 127      2053 6967 
 128               	.LC9:
 129 00b6 436C 6966 		.string	"Cliff Front Right Signal: %d\n"
 129      6620 4672 
 129      6F6E 7420 
 129      5269 6768 
 129      7420 5369 
 130               	.LC10:
 131 00d4 436C 6966 		.string	"Cliff Right Signal: %d\n"
 131      6620 5269 
 131      6768 7420 
 131      5369 676E 
 131      616C 3A20 
 132               		.text
 134               	.global	iroblifePeriodic
 136               	iroblifePeriodic:
   1:lib2a.c       **** #include "lib2a.h"
   2:lib2a.c       **** #include "irobserial.h"
   3:lib2a.c       **** #include "sensing.h"
   4:lib2a.c       **** #include "oi.h"
   5:lib2a.c       **** #include "cmod.h"
   6:lib2a.c       **** 
   7:lib2a.c       **** // Called by irobPeriodic
   8:lib2a.c       **** void iroblifePeriodic(void) {
 138               	.LM0:
 139               	.LFBB1:
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
   9:lib2a.c       ****     // Switch output to USB
  10:lib2a.c       ****     setSerialDestination(SERIAL_USB);
 145               	.LM1:
 146 0000 82E0      		ldi r24,lo8(2)
 147 0002 0E94 0000 		call setSerialDestination
  11:lib2a.c       ****     // Output sensor values
  12:lib2a.c       ****     irobprintf("Charging State: %d\n", getSensorUint8(SenChargeState));
 149               	.LM2:
 150 0006 80E1      		ldi r24,lo8(16)
 151 0008 0E94 0000 		call getSensorUint8
 152 000c 1F92      		push __zero_reg__
 153 000e 8F93      		push r24
 154 0010 80E0      		ldi r24,lo8(.LC0)
 155 0012 90E0      		ldi r25,hi8(.LC0)
 156 0014 9F93      		push r25
 157 0016 8F93      		push r24
 158 0018 0E94 0000 		call irobprintf
  13:lib2a.c       ****     irobprintf("Voltage: %d\n", getSensorUint16(SenVolt1));
 160               	.LM3:
 161 001c 81E1      		ldi r24,lo8(17)
 162 001e 0E94 0000 		call getSensorUint16
 163 0022 9F93      		push r25
 164 0024 8F93      		push r24
 165 0026 80E0      		ldi r24,lo8(.LC1)
 166 0028 90E0      		ldi r25,hi8(.LC1)
 167 002a 9F93      		push r25
 168 002c 8F93      		push r24
 169 002e 0E94 0000 		call irobprintf
  14:lib2a.c       ****     irobprintf("Current: %d\n", getSensorInt16(SenCurr1));
 171               	.LM4:
 172 0032 83E1      		ldi r24,lo8(19)
 173 0034 0E94 0000 		call getSensorInt16
 174 0038 9F93      		push r25
 175 003a 8F93      		push r24
 176 003c 80E0      		ldi r24,lo8(.LC2)
 177 003e 90E0      		ldi r25,hi8(.LC2)
 178 0040 9F93      		push r25
 179 0042 8F93      		push r24
 180 0044 0E94 0000 		call irobprintf
  15:lib2a.c       ****     irobprintf("Battery Temperature: %d\n", getSensorInt8(SenTemp));
 182               	.LM5:
 183 0048 85E1      		ldi r24,lo8(21)
 184 004a 0E94 0000 		call getSensorInt8
 185 004e 282F      		mov r18,r24
 186 0050 3327      		clr r19
 187 0052 27FD      		sbrc r18,7
 188 0054 3095      		com r19
 189 0056 3F93      		push r19
 190 0058 8F93      		push r24
 191 005a 80E0      		ldi r24,lo8(.LC3)
 192 005c 90E0      		ldi r25,hi8(.LC3)
 193 005e 9F93      		push r25
 194 0060 8F93      		push r24
 195 0062 0E94 0000 		call irobprintf
  16:lib2a.c       ****     irobprintf("Battery Charge: %d\n", getSensorUint16(SenCharge1));
 197               	.LM6:
 198 0066 86E1      		ldi r24,lo8(22)
 199 0068 0E94 0000 		call getSensorUint16
 200 006c 9F93      		push r25
 201 006e 8F93      		push r24
 202 0070 80E0      		ldi r24,lo8(.LC4)
 203 0072 90E0      		ldi r25,hi8(.LC4)
 204 0074 9F93      		push r25
 205 0076 8F93      		push r24
 206 0078 0E94 0000 		call irobprintf
  17:lib2a.c       ****     irobprintf("Battery Capacity: %d\n", getSensorUint16(SenCap1));
 208               	.LM7:
 209 007c 88E1      		ldi r24,lo8(24)
 210 007e 0E94 0000 		call getSensorUint16
 211 0082 9F93      		push r25
 212 0084 8F93      		push r24
 213 0086 80E0      		ldi r24,lo8(.LC5)
 214 0088 90E0      		ldi r25,hi8(.LC5)
 215 008a 9F93      		push r25
 216 008c 8F93      		push r24
 217 008e 0E94 0000 		call irobprintf
  18:lib2a.c       ****     irobprintf("Wall Signal: %d\n", getSensorUint16(SenWallSig1));
 219               	.LM8:
 220 0092 8AE1      		ldi r24,lo8(26)
 221 0094 0E94 0000 		call getSensorUint16
 222 0098 9F93      		push r25
 223 009a 8F93      		push r24
 224 009c 80E0      		ldi r24,lo8(.LC6)
 225 009e 90E0      		ldi r25,hi8(.LC6)
 226 00a0 9F93      		push r25
 227 00a2 8F93      		push r24
 228 00a4 0E94 0000 		call irobprintf
  19:lib2a.c       ****     irobprintf("Cliff Left Signal: %d\n", getSensorUint16(SenCliffLSig1));
 230               	.LM9:
 231 00a8 8CE1      		ldi r24,lo8(28)
 232 00aa 0E94 0000 		call getSensorUint16
 233 00ae 9F93      		push r25
 234 00b0 8F93      		push r24
 235 00b2 80E0      		ldi r24,lo8(.LC7)
 236 00b4 90E0      		ldi r25,hi8(.LC7)
 237 00b6 9F93      		push r25
 238 00b8 8F93      		push r24
 239 00ba 0E94 0000 		call irobprintf
  20:lib2a.c       ****     irobprintf("Cliff Front Left Signal: %d\n", getSensorUint16(SenCliffFLSig1));
 241               	.LM10:
 242 00be 8DB7      		in r24,__SP_L__
 243 00c0 9EB7      		in r25,__SP_H__
 244 00c2 8096      		adiw r24,32
 245 00c4 0FB6      		in __tmp_reg__,__SREG__
 246 00c6 F894      		cli
 247 00c8 9EBF      		out __SP_H__,r25
 248 00ca 0FBE      		out __SREG__,__tmp_reg__
 249 00cc 8DBF      		out __SP_L__,r24
 250 00ce 8EE1      		ldi r24,lo8(30)
 251 00d0 0E94 0000 		call getSensorUint16
 252 00d4 9F93      		push r25
 253 00d6 8F93      		push r24
 254 00d8 80E0      		ldi r24,lo8(.LC8)
 255 00da 90E0      		ldi r25,hi8(.LC8)
 256 00dc 9F93      		push r25
 257 00de 8F93      		push r24
 258 00e0 0E94 0000 		call irobprintf
  21:lib2a.c       ****     irobprintf("Cliff Front Right Signal: %d\n", getSensorUint16(SenCliffFRSig1));
 260               	.LM11:
 261 00e4 80E2      		ldi r24,lo8(32)
 262 00e6 0E94 0000 		call getSensorUint16
 263 00ea 9F93      		push r25
 264 00ec 8F93      		push r24
 265 00ee 80E0      		ldi r24,lo8(.LC9)
 266 00f0 90E0      		ldi r25,hi8(.LC9)
 267 00f2 9F93      		push r25
 268 00f4 8F93      		push r24
 269 00f6 0E94 0000 		call irobprintf
  22:lib2a.c       ****     irobprintf("Cliff Right Signal: %d\n", getSensorUint16(SenCliffRSig1));
 271               	.LM12:
 272 00fa 82E2      		ldi r24,lo8(34)
 273 00fc 0E94 0000 		call getSensorUint16
 274 0100 9F93      		push r25
 275 0102 8F93      		push r24
 276 0104 80E0      		ldi r24,lo8(.LC10)
 277 0106 90E0      		ldi r25,hi8(.LC10)
 278 0108 9F93      		push r25
 279 010a 8F93      		push r24
 280 010c 0E94 0000 		call irobprintf
  23:lib2a.c       ****     // Spacing
  24:lib2a.c       ****     byteTx('\n');
 282               	.LM13:
 283 0110 8AE0      		ldi r24,lo8(10)
 284 0112 0E94 0000 		call byteTx
  25:lib2a.c       ****     // Switch output back to Create for updating sensor values
  26:lib2a.c       ****     setSerialDestination(SERIAL_CREATE);
 286               	.LM14:
 287 0116 8DB7      		in r24,__SP_L__
 288 0118 9EB7      		in r25,__SP_H__
 289 011a 0C96      		adiw r24,12
 290 011c 0FB6      		in __tmp_reg__,__SREG__
 291 011e F894      		cli
 292 0120 9EBF      		out __SP_H__,r25
 293 0122 0FBE      		out __SREG__,__tmp_reg__
 294 0124 8DBF      		out __SP_L__,r24
 295 0126 81E0      		ldi r24,lo8(1)
 296 0128 0C94 0000 		jmp setSerialDestination
 298               	.Lscope1:
 300               	.Letext0:
 301               		.ident	"GCC: (GNU) 4.8.2"
 302               	.global __do_copy_data
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lib2a.c
     /tmp/ccaKU11R.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccaKU11R.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccaKU11R.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccaKU11R.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccaKU11R.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccaKU11R.s:136    .text:0000000000000000 iroblifePeriodic

UNDEFINED SYMBOLS
setSerialDestination
getSensorUint8
irobprintf
getSensorUint16
getSensorInt16
getSensorInt8
byteTx
__do_copy_data
